services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      # args:
        # http_proxy: http://host.docker.internal:7897
        # https_proxy: http://host.docker.internal:7897
        # HTTP_PROXY: http://host.docker.internal:7897
        # HTTPS_PROXY: http://host.docker.internal:7897
    container_name: goaccounting-api
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TZ: Asia/Shanghai
    volumes:
      #- .:/app
      - ./config.yaml:/app/config.yaml
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - goaccounting-network

  mysql:
    image: mysql:8.0
    container_name: goaccounting-mysql
    restart: always
    # ports:
      # - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: hypnos
      MYSQL_DATABASE: Accounting
      MYSQL_USER: hypnos
      MYSQL_PASSWORD: hypnos
      TZ: Asia/Shanghai
    volumes:
      - mysql_data:/var/lib/mysql
      #- ./init-sql:/docker-entrypoint-initdb.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "hypnos", "-phypnos"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - goaccounting-network

  redis:
    image: redis:alpine
    container_name: goaccounting-redis
    restart: always
    # ports:
      # - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - goaccounting-network

networks:
  goaccounting-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: