services:
  # Go后端服务
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: goaccounting-api
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TZ: Asia/Shanghai
      # 以下环境变量可以在 config.yaml 里引用，也可在此直接指定
      # DB_HOST: mysql
      # DB_PORT: 3306
      # DB_USER: hypnos
      # DB_PASS: hypnos
      # REDIS_HOST: redis
      # REDIS_PORT: 6379
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - goaccounting-network

  mysql:
    image: mysql:8.0
    container_name: goaccounting-mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: hypnos
      MYSQL_DATABASE: Accounting
      MYSQL_USER: hypnos
      MYSQL_PASSWORD: hypnos
      TZ: Asia/Shanghai
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-sql:/docker-entrypoint-initdb.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-hhypnos", "-phypnos"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - goaccounting-network

  redis:
    image: redis:alpine
    container_name: goaccounting-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - goaccounting-network

  # swagger-ui (如需API文档可取消注释)
  # swagger-ui:
  #   image: swaggerapi/swagger-ui
  #   container_name: goaccounting-swagger
  #   restart: always
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     API_URL: http://localhost:8080/public/swagger/doc.json
  #     BASE_URL: /swagger
  #   depends_on:
  #     - api
  #   networks:
  #     - goaccounting-network

networks:
  goaccounting-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: